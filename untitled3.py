# -*- coding: utf-8 -*-
"""Untitled3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/19odwT8mkF7SaBtBojNcqAxXyLNTsfoK2
"""

from g4f.client import Client
import telebot
import requests
from datetime import datetime, timedelta
import pytz

TOKEN = '7787223686:AAHSoSOdf49a9z_Cts1s1zJx4sy1UzsDh1s'
bot = telebot.TeleBot(TOKEN)
weather_api_key = 'e74c7b0d6df55c70eda3289ef83ba688'


clothing_recommendations = {
    'hot': "На улице жарко. Рекомендуется: легкая одежда, шорты, футболка, головной убор, солнцезащитные очки.",
    'warm': "Тепло. Рекомендуется: футболка, легкие брюки или юбка, можно взять легкую куртку на вечер.",
    'mild': "Умеренно тепло. Рекомендуется: рубашка с длинным рукавом, джинсы, легкая куртка.",
    'cool': "Прохладно. Рекомендуется: свитер, джинсы, ветровка или легкое пальто.",
    'cold': "Холодно. Рекомендуется: теплое пальто, шапка, шарф, перчатки, утепленная обувь.",
    'very_cold': "Очень холодно. Рекомендуется: зимнее пальто или пуховик, термобелье, теплая обувь, шапка, шарф, перчатки."
}

@bot.message_handler(commands=['start'])
def start(message):
    welcome_text = (
        f"Привет, {message.from_user.first_name}! Я бот, который поможет тебе с:\n"
        "1. Погодой и рекомендациями как одеться\n"
        "2. Ответами на любые твои вопросы\n\n"
        "Просто напиши мне название города для прогноза погоды или задай любой вопрос!"
    )
    bot.send_message(message.chat.id, welcome_text)

def get_weather(city):
    try:
        url = f"http://api.openweathermap.org/data/2.5/weather?q={city}&appid={weather_api_key}&units=metric&lang=ru"
        response = requests.get(url)
        data = response.json()

        if data['cod'] != 200:
            return None


        timezone_offset = data['timezone']


        sunrise_utc = datetime.fromtimestamp(data['sys']['sunrise'])
        sunset_utc = datetime.fromtimestamp(data['sys']['sunset'])


        sunrise_local = sunrise_utc + timedelta(seconds=timezone_offset)
        sunset_local = sunset_utc + timedelta(seconds=timezone_offset)

        weather = {
            'city': data['name'],
            'temp': round(data['main']['temp']),
            'feels_like': round(data['main']['feels_like']),
            'description': data['weather'][0]['description'],
            'humidity': data['main']['humidity'],
            'wind': data['wind']['speed'],
            'sunrise': sunrise_local.strftime('%H:%M'),
            'sunset': sunset_local.strftime('%H:%M')
        }
        return weather
    except Exception as e:
        print(f"Ошибка при получении погоды: {e}")
        return None

def get_clothing_recommendation(temp):
    if temp > 25:
        return clothing_recommendations['hot']
    elif 20 <= temp <= 25:
        return clothing_recommendations['warm']
    elif 15 <= temp < 20:
        return clothing_recommendations['mild']
    elif 5 <= temp < 15:
        return clothing_recommendations['cool']
    elif -5 <= temp < 5:
        return clothing_recommendations['cold']
    else:
        return clothing_recommendations['very_cold']

@bot.message_handler(content_types=['text'])
def handle_message(message):

    weather = get_weather(message.text)
    if weather:
        weather_text = (
            f"Погода в {weather['city']}:\n"
            f"🌡 Температура: {weather['temp']}°C (ощущается как {weather['feels_like']}°C)\n"
            f"☁ Описание: {weather['description'].capitalize()}\n"
            f"💧 Влажность: {weather['humidity']}%\n"
            f"🌬 Ветер: {weather['wind']} м/с\n"
            f"🌅 Восход: {weather['sunrise']}\n"
            f"🌇 Закат: {weather['sunset']}\n\n"
            f"{get_clothing_recommendation(weather['temp'])}"
        )
        bot.send_message(message.chat.id, weather_text)
    else:

        client = Client()
        try:
            response = client.chat.completions.create(
                model="gpt-4o",
                messages=[{"role": "user", "content": message.text}],
            )
            bot.send_message(message.chat.id, response.choices[0].message.content)
        except Exception as e:
            bot.send_message(message.chat.id, f"Извините, произошла ошибка: {str(e)}")

if __name__ == '__main__':
    print("Бот запущен...")
    bot.polling()